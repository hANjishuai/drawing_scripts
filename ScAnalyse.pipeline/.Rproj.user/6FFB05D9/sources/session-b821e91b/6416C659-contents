#01.差异分析####
#A:Env_setting
cell<-"Bcell"
PutIn <- "../output/01HC-DLE-SLE_blood-result/04.subcell/02.cluster/1.CD79A_Bcell.cluster.Rdata"
#subcell <- subset(seuratdata,subset = manual_L1=="B_cell")
out_name <- "Bcell"
AnnotationType <- "manual_L2"
Cluster<-"C08_Bc_CD5+"
ct<-"B1"
ct.noasc <-"C02_ASC_MZB1+" 

#B:所需包以及函数载入
  library(ggplot2)
  library(cowplot)
  library(ggrepel)
  library(Seurat)
  library(ggpubr)
  library(tidyverse)
  theme_set(theme_cowplot())

#C:正式pipline
  if (!dir.exists(paste0("../output/06.DEG/"))) dir.create(paste0("../output/06.DEG/"))
  if (!dir.exists(paste0("../output/06.DEG/",cell))) dir.create(paste0("../output/06.DEG/",cell))
  #load
  celldata=load(paste0("../output/01HC-DLE-SLE_blood-result/04.subcell/02.cluster/1.CD79A_Bcell.cluster.Rdata") )
  
  #修改一下细胞注释
  if(T){
  seuratdata <- RenameIdents(seuratdata,
               "C08_Bc_CD5+SPN+"="C08_Bc_CD5+",
               "C09_Bc_CD5+SPN-"="C08_Bc_CD5+"
               )
  seuratdata$manual_L2 <- seuratdata@active.ident
  }
  #根据疾病状态，进行subset
  Condition <- seuratdata$condition %>% levels()
  #得到不同疾病状态下的，B1差异基因
  lapply(Condition, FUN = function(x){
    #选定疾病状态
    subcell <- subset(seuratdata,subset = condition==x)
    #排除ASC
    Idents(subcell) <- AnnotationType
    subcell.noasc <- subset(subcell,subset = manual_L2 != ct.noasc)
    #选定要研究的细胞注释集
    Idents(subcell.noasc) <- AnnotationType
    #数据实验选择“RNA”，正态和标准化，差异分析
    DefaultAssay(subcell) <- "RNA"
    all.genes=rownames(subcell)
    subcell <- subcell %>% NormalizeData() %>% 
      ScaleData(.,features = all.genes)
    all.marker.RNA <-FindAllMarkers(subcell,assay = "RNA",only.pos = F,
                   min.pct = 0.5,logfc.threshold = 0.5)
    write.csv(all.marker.RNA,
          file = paste0("../output/06.DEG/",cell,"_marker_",x,".csv"))
    #选定关注的细胞类型，保存差异基因集,更改Cluster就能
    filter_marker.RNA <- all.marker.RNA %>% 
      mutate(.,status=ifelse(all.marker.RNA$avg_log2FC>0,"top","down"),
             condition=x) %>%
      filter(cluster==Cluster,p_val_adj<0.05) %>% arrange(desc(avg_log2FC))
    write.csv(filter_marker.RNA,
              file = paste0("../output/06.DEG/",Cluster,"_marker_",x,".csv"))
  })
  
  
#02.通路富集注释####
if (!dir.exists("../output/07.enrichment")) {
  dir.create("../output/07.enrichment")
}
#A:Env_setting 
  log2FC_cutoff = log2(1)
  pvalue_cutoff = 0.05
  padj_cutoff = 0.05
#B:所需包以及函数载入
  options(stringsAsFactors = F) 
  library(clusterProfiler)
  #BiocManager::install("clusterProfiler")
  library(enrichplot)
  library(tidyverse)
  library(org.Hs.eg.db)
  #BiocManager::install("org.Hs.eg.db")
  #library(org.Mm.eg.db)
  library(DOSE)
  library(pathview)
  #对针对基因集进行富集分析
  trsymbol <- function(genelist,OrgDb="org.Hs.eg.db",organism  = "hsa",ont="ALL"){
    gene_entrez <- as.character(na.omit(bitr(genelist, #数据集
                              fromType="SYMBOL", #输入格式
                              toType="ENTREZID", # 转为ENTERZID格式
                              OrgDb=OrgDb)[,2])) #"org.Hs.eg.db" "org.Mm.eg.db"
    kegg_enrich_results <- enrichKEGG(gene = gene_entrez,
                                      organism  = organism, #物种人类 hsa 小鼠mmu
                                      pvalueCutoff = 0.05,
                                      qvalueCutoff = 0.2)
    kegg_enrich_results <- DOSE::setReadable(kegg_enrich_results, 
                                             OrgDb=OrgDb, 
                                             keyType='ENTREZID')#ENTREZID to gene Symbol
    go_enrich_results <- enrichGO(gene = gene_entrez,
                                     OrgDb = OrgDb,
                                     ont   = ont  ,     #One of "BP", "MF"  "CC"  "ALL" 
                                     pvalueCutoff  = 0.05,
                                     qvalueCutoff  = 0.2,
                                     readable      = TRUE)
    save(kegg_enrich_results,go_enrich_results,file = "../output/enrichment_results_temp.Rdata")
    }
  #获得不同疾病状态下的共同通路谱
  commn_pathway <- function(listPathway){
    listPathName <- lapply(listPathway, FUN = function(p){
      p$Description
    })
    commonPath <- Reduce(intersect,listPathName)
    
    common_pathdf <- lapply(listPathway,FUN = function(p){
      subdf <- subset(p,subset = p$Description %in% commonPath) %>% 
        dplyr::select(c("condtion","Description","Count","geneID"))
    })
    common_df <- Reduce(rbind,common_pathdf)
  }
  
#C:正式pipline
  #01读入指定细胞差异基因集，收入同一列表
  markerdf_list<- lapply(list.files("../output/06.DEG",
                                    pattern = "^C.*v$",
                                    full.names = T),
                         read_csv)
  names <- c("DLE","HC","SLE")
  names(markerdf_list) <- names
  #02得到每个疾病状态下的B1细胞的通路富集谱
  lapply(markerdf_list, FUN = function(df){
    #取出'avg_log2FC','p_val_adj','gene'
    Name<-df$condition %>% unique()
    need_DEG <- df[,c(3,6,8)]
    colnames(need_DEG) <- c('avg_log2FC','p_val_adj','gene')
    #按照差异倍数大于log2(1),padj<0.05，取出差异基因名（symbol）
    gene_up<-need_DEG[with(need_DEG,
                                avg_log2FC>log2FC_cutoff & 
                             p_val_adj < pvalue_cutoff),]$gene
    gene_down<-need_DEG[with(need_DEG,
                           avg_log2FC< -log2FC_cutoff & 
                             p_val_adj < pvalue_cutoff),]$gene
    
    #### 转化基因名为entrez ID ###
    #org.Hs.eg.db\org.Mm.eg.db包含着各大主流数据库的数据，如entrez ID和ensembl,
    #keytypes(org.Hs.eg.db) #查看所有支持及可转化类型 常用 "ENTREZID","ENSEMBL","SYMBOL"
    trsymbol(gene_up)
    enrich_up <- load("../output/enrichment_results_temp.Rdata")
    go_up_results<- go_enrich_results@result
    kegg_up_results <- kegg_enrich_results@result
    write.csv(go_up_results,file = paste0("../output/",Name,"_go_up.csv"))
    write.csv(kegg_up_results,file=paste0("../output/",Name,"_kegg_up.csv"))
    
    
   trsymbol(gene_down)
   enrich_down <- load("../output/enrichment_results_temp.Rdata")
   go_down_results<- go_enrich_results@result
   kegg_down_results <- kegg_enrich_results@result
   write.csv(go_down_results,file=paste0("../output/",Name,"_go_down.csv"))
   write.csv(kegg_down_results,file=paste0("../output/",Name,"_kegg_down.csv"))
   
   })
  
  #03.1取每个疾病状态下B1细胞的共同上调/下调的通路
  listPathway_up_pwd <- list.files("../output/07.enrichment",#这里记得把文件移过来
                                pattern = "^.*_go_up",full.names = T)
  ##读取数据入列表  
  listPathway_up <- lapply(listPathway_up_pwd, function(p){
    con <- gsub("^../output/07.enrichment/","",p)  
    con <- gsub("_go_up.csv$","",con)
    Csv <- read.csv(p) %>% mutate(condtion=con)
  })
  names(listPathway_up) <- c("DLE","HC","SLE")
  ##获得共同通路表格,个性化注释
  common_df <- commn_pathway(listPathway_up)
  write_csv(common_df,"../output/07.enrichment/common_up_df_among_condition.csv")
 
  #加载已注释好的表格 
  common_df_anno <- read.csv2("../output/07.enrichment/common_up_df_among_condition.csv",
                              sep = ",")
  common_df_anno$Annotation <- ifelse(common_df_anno$Annotation=="",
                                      NA,common_df_anno$Annotation)
  common_df_anno <- common_df_anno[!is.na(common_df_anno$Annotation),]
  common_df_anno$Annotation <- factor(common_df_anno$Annotation,
                                      levels = c("A","B","C","D","E","O"))
  common_df_anno <- common_df_anno %>% arrange(common_df_anno$Annotation)
  common_path <- common_df_anno$Description
  
  df_anno <-read.csv2("../output/07.enrichment/common_up_df_among_condition.csv",
                      sep = ",")
  df_anno_sub <- df_anno[which(df_anno$Description %in% common_path),]
  write.csv(df_anno_sub,file = "../output/07.enrichment/common_up_df_among_condition_anno.csv")
  #这个文件可以去画图了
  
  
  
#03.(补)HC CD5+_SPN+/- 功能注释####
  library(dplyr)
  library(tibble)
  setwd("../output/01HC-DLE-SLE_blood-result/07.enrichment/")
  #df_up <- read.csv("C09_Bc_CD5+SPN-/HC_go_up.csv")
  df_down <- read.csv("C08_Bc_CD5+SPN+/HC_go_down.csv")
  
  #构建宽数据集
  df <- df_down[,c(4,14,15)] %>% filter(Annotation!="") 
  df$Annotation <- factor(df$Annotation,levels=c("A","B","C","D","E","O"),labels=c("Tc","Bc","Cytokine","APC","Chemotaxis","Others")) 
  df <- df %>% arrange(.,df$Annotation)
  #热图记得要设置行名
  df <- column_to_rownames(df,var = 'Description')
  #设置颜色：
  #range(df$Count)
  col_fun <- colorRamp2(c(0,4.5,9),
                      #上升  c("#e8f6e5","#fca069","#d43627"),
                      c("#e8f6e5","#c4dcec","#829ec9"))
  #设置注释bar
  barnumber <- df$Annotation 
  #设置注释颜色
  table(df$Annotation)
  col_anno <- as.character(paletteer_d("ggsci::default_igv",n=6))
  col_anno<- rep(col_anno,c(9,7,3,14,0,9),each=T)
  names(col_anno) <- barnumber
  
  left_anno <- rowAnnotation(Module=df$Annotation,
                             col=list(Module=col_anno),
                             border = F,
                             show_annotation_name = F,
                             annotation_legend_param = list(title="",labels=""),
                             show_legend = F
  )
  
  
  
  df0 <- df[,-2]
  pdf("../07.enrichment/C08_Bc_CD5+SPN+/heatmapcomponents/CD5+SPN+_downpathway_bc/HC_Pathdown.pdf",
      width = 0.8,
      height = 12)
  p0 <- Heatmap(df0,col = col_fun,
          cluster_rows = F,
          cluster_columns = F,
          column_names_rot = 0,
          column_names_centered=T,
          column_labels = "",
          column_names_gp = gpar(fontsize=10,fontface="bold"),
          row_title_gp = gpar(fontsize=8,fontface="bold"),
          left_annotation = left_anno,
          show_heatmap_legend = F,
          row_split = df$Annotation)
  dev.off()  
  
  #条形柱状图
  df <- rownames_to_column(df,var = "Description") 
  df$Description <- factor(df$Description,levels=rev(df$Description)) 
  
  pdf("./C08_Bc_CD5+SPN+/heatmapcomponents/CD5+SPN+_downpathway_bc/barplot_down.pdf",width = 10,height = 12)
 p1<- ggplot(df) +
    geom_col(mapping = aes(x=Description,y=Count,fill = Annotation),width = 0.8,)+
    theme_bw()+
    scale_fill_manual(name="",values = as.character(paletteer_d("ggsci::default_igv",n=6)))+
    theme(axis.title.y = element_blank(),
          axis.text.x = element_text(angle = 0,),
          axis.title.x = element_text(face="bold"),
          panel.grid.major = element_blank(),
          axis.text.y = element_text(size = 6,face = "bold",hjust = 0),
          axis.ticks = element_blank(),
          legend.position = "none",
    )+
    scale_y_continuous(expand=c(0,0))+
    coord_flip()
  dev.off()  
  
  pdf('./C08_Bc_CD5+SPN+/heatmapcomponents/CD5+SPN+_downpathway_bc/path_down_cowplot.pdf',width = 8,height = 4)
  plot_grid(as.ggplot(p0),p1,NULL,rel_widths = c(1.5,10,8),nrow = 1)
  dev.off()
    
    
    