pathway_ID <- df$ID[1:20]
#获得前20的通路具体基因
lapply(pathway_ID, function(i){
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB <- GO_SUB[,c(3,1)]
GO_SUB <- rename(GO_SUB,'gs_name'='term','gene_symbol'='gene')
set.seed(666)
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
gsea_results <- egmt@result#如果实在想绘制这个通路的gsea图片，就使用gseaplot2吧
gsea_results2 <- gsea_results[order(gsea_results$enrichmentScore,decreasing = F),]
#画图
terms <- egmt@result$ID#如果terms里面的通路，与egmt的result$ID不一致，就容易报错
pdf(paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_gsearesult.pdf"),
width = 8.5,
height = 4.7)
gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
dev.off()
#如果你很想看看通路是升高还是降低，作条形码图，那接下来使用GSEA吧
})
pathway_ID
#获得前20的通路具体基因
lapply(pathway_ID, function(i){
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB <- GO_SUB[,c(3,1)]
GO_SUB <- rename(GO_SUB,'gs_name'='term','gene_symbol'='gene')
set.seed(666)
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
gsea_results <- egmt@result#如果实在想绘制这个通路的gsea图片，就使用gseaplot2吧
gsea_results2 <- gsea_results[order(gsea_results$enrichmentScore,decreasing = F),]
#画图
terms <- egmt@result$ID#如果terms里面的通路，与egmt的result$ID不一致，就容易报错
pdf(paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_gsearesult.pdf"),
width = 8.5,
height = 4.7)
gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
dev.off()
#如果你很想看看通路是升高还是降低，作条形码图，那接下来使用GSEA吧
})
pathway_ID
i=GO:0032418
i='GO:0032418'
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB <- GO_SUB[,c(3,1)]
GO_SUB <- rename(GO_SUB,'gs_name'='term','gene_symbol'='gene')
set.seed(666)
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
genelist
GO_SUB
i
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
GO_SUB
if(GO_SUB){print("a")}
if(!GO_SUB){print("a")}
if(!GO_SUB){
print('a')
}
GO_SUB
length(GO_SUB)
nrow(GO_SUB)
if(nrow(GO_SUB)!=0){
print('a')
}
#获得前20的通路具体基因
lapply(pathway_ID, function(i){
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
if(nrow(GO_SUB)!=0){
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB <- GO_SUB[,c(3,1)]
GO_SUB <- rename(GO_SUB,'gs_name'='term','gene_symbol'='gene')
set.seed(666)
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
gsea_results <- egmt@result#如果实在想绘制这个通路的gsea图片，就使用gseaplot2吧
gsea_results2 <- gsea_results[order(gsea_results$enrichmentScore,decreasing = F),]
#画图
terms <- egmt@result$ID#如果terms里面的通路，与egmt的result$ID不一致，就容易报错
pdf(paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_gsearesult.pdf"),
width = 8.5,
height = 4.7)
gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
dev.off()
}
})
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB
pathway_ID
i='GO:0002504'
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
if(nrow(GO_SUB)!=0){
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB <- GO_SUB[,c(3,1)]
GO_SUB <- rename(GO_SUB,'gs_name'='term','gene_symbol'='gene')
set.seed(666)
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
gsea_results <- egmt@result#如果实在想绘制这个通路的gsea图片，就使用gseaplot2吧
gsea_results2 <- gsea_results[order(gsea_results$enrichmentScore,decreasing = F),]
#画图
terms <- egmt@result$ID#如果terms里面的通路，与egmt的result$ID不一致，就容易报错
pdf(paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_gsearesult.pdf"),
width = 8.5,
height = 4.7)
gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
dev.off()
}
name
gsea_plots<-gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
ggsave(paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_gsearesult.pdf"),
plot = gsea_plots,
width = 8.5,
height = 4.7)
#002准备好需要富集的通路
lapply(pathway_list, function(x){
print(x)
df <- read_csv(x)
name <- str_split(x,"/")[[1]][5]
df$qscore <- -log(df$p.adjust,base = 10)
df <- df[,c("Description","qscore","ID")] %>% arrange(desc(df$qscore))
df$ID <- factor(df$ID,levels=df$ID)
#取qscore前20的通路ID
pathway_ID <- df$ID[1:20]
#获得前20的通路具体基因
lapply(pathway_ID, function(i){
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
if(nrow(GO_SUB)!=0){
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB <- GO_SUB[,c(3,1)]
GO_SUB <- rename(GO_SUB,'gs_name'='term','gene_symbol'='gene')
set.seed(666)
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
gsea_results <- egmt@result#如果实在想绘制这个通路的gsea图片，就使用gseaplot2吧
gsea_results2 <- gsea_results[order(gsea_results$enrichmentScore,decreasing = F),]
#画图
terms <- egmt@result$ID#如果terms里面的通路，与egmt的result$ID不一致，就容易报错
gsea_plots<-gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
ggsave(paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_gsearesult.pdf"),
plot = gsea_plots,
width = 8.5,
height = 4.7)
}
})
})
pathway_ID
i
View(GO_df)
i
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
View(GO_SUB)
paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_",pathname,"_gsearesult.pdf")
pathname <- unique(GO_SUB$gs_name)
paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_",pathname,"_gsearesult.pdf")
#获得前20的通路具体基因
lapply(pathway_ID, function(i){
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
pathname <- unique(GO_SUB$gs_name)
if(nrow(GO_SUB)!=0){
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB <- GO_SUB[,c(3,1)]
GO_SUB <- rename(GO_SUB,'gs_name'='term','gene_symbol'='gene')
set.seed(666)
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
gsea_results <- egmt@result#如果实在想绘制这个通路的gsea图片，就使用gseaplot2吧
gsea_results2 <- gsea_results[order(gsea_results$enrichmentScore,decreasing = F),]
#画图
terms <- egmt@result$ID#如果terms里面的通路，与egmt的result$ID不一致，就容易报错
gsea_plots<-gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
ggsave(paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_",pathname,"_gsearesult.pdf"),
plot = gsea_plots,
width = 8.5,
height = 4.7)
}
})
#002准备好需要富集的通路
lapply(pathway_list, function(x){
df <- read_csv(x)
name <- str_split(x,"/")[[1]][5]
df$qscore <- -log(df$p.adjust,base = 10)
df <- df[,c("Description","qscore","ID")] %>% arrange(desc(df$qscore))
df$ID <- factor(df$ID,levels=df$ID)
#取qscore前20的通路ID
pathway_ID <- df$ID[1:20]
#获得前20的通路具体基因
lapply(pathway_ID, function(i){
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
pathname <- unique(GO_SUB$gs_name)
if(nrow(GO_SUB)!=0){
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB <- GO_SUB[,c(3,1)]
GO_SUB <- rename(GO_SUB,'gs_name'='term','gene_symbol'='gene')
set.seed(666)
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
gsea_results <- egmt@result#如果实在想绘制这个通路的gsea图片，就使用gseaplot2吧
gsea_results2 <- gsea_results[order(gsea_results$enrichmentScore,decreasing = F),]
#画图
terms <- egmt@result$ID#如果terms里面的通路，与egmt的result$ID不一致，就容易报错
gsea_plots<-gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
ggsave(paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_",pathname,"_gsearesult.pdf"),
plot = gsea_plots,
width = 8.5,
height = 4.7)
}
})
})
x
pathway_list
x="../output/04.subcell/07.enrichment/09_BINF_IFIT3+_go_up.csv"
df <- read_csv(x)
name <- str_split(x,"/")[[1]][5]
name
df$qscore <- -log(df$p.adjust,base = 10)
df <- df[,c("Description","qscore","ID")] %>% arrange(desc(df$qscore))
View(df)
df$ID <- factor(df$ID,levels=df$ID)
#取qscore前20的通路ID
pathway_ID <- df$ID[1:20]
#获得前20的通路具体基因
lapply(pathway_ID, function(i){
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
pathname <- unique(GO_SUB$gs_name)
if(nrow(GO_SUB)!=0){
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB <- GO_SUB[,c(3,1)]
GO_SUB <- rename(GO_SUB,'gs_name'='term','gene_symbol'='gene')
set.seed(666)
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
gsea_results <- egmt@result#如果实在想绘制这个通路的gsea图片，就使用gseaplot2吧
gsea_results2 <- gsea_results[order(gsea_results$enrichmentScore,decreasing = F),]
#画图
terms <- egmt@result$ID#如果terms里面的通路，与egmt的result$ID不一致，就容易报错
gsea_plots<-gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
ggsave(paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_",pathname,"_gsearesult.pdf"),
plot = gsea_plots,
width = 8.5,
height = 4.7)
}
})
pathway_ID
df <- df[,c("Description","qscore","ID")] %>% arrange(desc(df$qscore))
df$ID <- factor(df$ID,levels=df$ID)
df$ID
#取qscore前20的通路ID
pathway_ID <- df$ID[1:20]
pathway_ID
i='GO:0051238'
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
pathname <- unique(GO_SUB$gs_name)
pathname
nrow(GO_SUB)!=0
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB <- GO_SUB[,c(3,1)]
GO_SUB <- rename(GO_SUB,'gs_name'='term','gene_symbol'='gene')
set.seed(666)
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
gsea_results <- egmt@result#如果实在想绘制这个通路的gsea图片，就使用gseaplot2吧
gsea_results2 <- gsea_results[order(gsea_results$enrichmentScore,decreasing = F),]
#画图
terms <- egmt@result$ID#如果terms里面的通路，与egmt的result$ID不一致，就容易报错
gsea_plots<-gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
ggsave(paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_",pathname,"_gsearesult.pdf"),
plot = gsea_plots,
width = 8.5,
height = 4.7)
gsea_plots<-gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
gsea_plots
gsea_results
egmt
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
GO_SUB
genelist
egmt
GO_SUB
gsea_results
gsea_results2
pathway_ID
#获得前20的通路具体基因
lapply(pathway_ID, function(i){
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
pathname <- unique(GO_SUB$gs_name)
if(nrow(GO_SUB)!=0){
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB <- GO_SUB[,c(3,1)]
GO_SUB <- rename(GO_SUB,'gs_name'='term','gene_symbol'='gene')
set.seed(666)
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
gsea_results <- egmt@result#如果实在想绘制这个通路的gsea图片，就使用gseaplot2吧
gsea_results2 <- gsea_results[order(gsea_results$enrichmentScore,decreasing = F),]
#画图
if(nrow(gsea_results2)!=0){
terms <- egmt@result$ID#如果terms里面的通路，与egmt的result$ID不一致，就容易报错
gsea_plots<-gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
ggsave(paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_",pathname,"_gsearesult.pdf"),
plot = gsea_plots,
width = 8.5,
height = 4.7)}
}
})
#002准备好需要富集的通路
lapply(pathway_list, function(x){
df <- read_csv(x)
name <- str_split(x,"/")[[1]][5]
df$qscore <- -log(df$p.adjust,base = 10)
df <- df[,c("Description","qscore","ID")] %>% arrange(desc(df$qscore))
df$ID <- factor(df$ID,levels=df$ID)
#取qscore前20的通路ID
pathway_ID <- df$ID[1:20]
#获得前20的通路具体基因
lapply(pathway_ID, function(i){
GO_SUB <- GO_df %>% filter(gs_exact_source==i)
pathname <- unique(GO_SUB$gs_name)
if(nrow(GO_SUB)!=0){
GO_SUB <- GO_SUB[!duplicated(GO_SUB$gene_symbol),]
GO_SUB <- GO_SUB[,c(3,1)]
GO_SUB <- rename(GO_SUB,'gs_name'='term','gene_symbol'='gene')
set.seed(666)
egmt <- GSEA(genelist,
TERM2GENE = GO_SUB,
verbose = F,
nPerm=10000,
minGSSize = 10,#自定义的geneset某个基因通路很容易没有那么多基因，
maxGSSize = 1000,#如果设置太大size，egmt就不会有这个通路，这个时候
pvalueCutoff = 1)
gsea_results <- egmt@result#如果实在想绘制这个通路的gsea图片，就使用gseaplot2吧
gsea_results2 <- gsea_results[order(gsea_results$enrichmentScore,decreasing = F),]
#画图
if(nrow(gsea_results2)!=0){
terms <- egmt@result$ID#如果terms里面的通路，与egmt的result$ID不一致，就容易报错
gsea_plots<-gseaNb(object = egmt,
geneSetID = terms,
subPlot = 2,
addPval = T,
pvalX = 0.75,
pvalY = 0.75,
pCol = 'black',
pvalSize = 4,
pHjust = 0,)
ggsave(paste0("../output/04.subcell/07.enrichment/GSEA_res/",name,"_",pathname,"_gsearesult.pdf"),
plot = gsea_plots,
width = 8.5,
height = 4.7)}
}
})
})
gc()
